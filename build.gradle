plugins {
    id 'war'
    id 'java'
    id 'pmd'
    id 'checkstyle'
    id 'jacoco'
}

group 'net.novucs'
version '0.2.0'

def username = System.properties['user.name']
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile group: 'org.apache.derby', name: 'derbyclient', version: '10.14.2.0'
    compile "com.stripe:stripe-java:15.4.0"
    providedCompile group: 'javax', name: 'javaee-api', version: '7.0'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.apache.derby', name: 'derby', version: '10.14.2.0'
    testCompile group: 'com.github.stefanbirkner', name: 'system-rules', version: '1.19.0'
    testCompile group: 'org.mockito', name: 'mockito-all', version: '1.10.19'
    testCompile group: 'javax.servlet', name: 'javax.servlet-api', version: '3.1.0'
    testCompile group: 'org.glassfish', name: 'javax.json', version: '1.1.4'
}

task autodeploy(type: Copy) {
    from war.archiveFile
    into "build"
    rename "esd-${project.version}.war", "app.war"
}

task windowsdeploy(type: Exec) {
    commandLine 'windowsdeploy.bat'
}

windowsdeploy.dependsOn autodeploy

task netbeansdeploy(type: Copy) {
    from war.archiveFile
    // TODO: Change this glassfish installation location to whichever machine is
    //  performing the demo.
    into "C:\\Users\\${username}.CAMPUS\\AppData\\Roaming\\Netbeans\\8.2\\config\\GF_4.1.1\\domain1\\autodeploy"
    rename "esd-${project.version}.war", "app.war"
}

checkstyle {
    toolVersion '8.24'
    configFile file('config/checkstyle/checkstyle.xml')
}

pmd {
    toolVersion '6.18.0'
    ruleSets = []
    ruleSetFiles = files("config/pmd/excludes.xml")
}

jacoco {
    toolVersion = "0.8.4"
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.7
            }
        }
    }
}

task coverage {
    dependsOn 'jacocoTestReport'
    dependsOn 'jacocoTestCoverageVerification'
    tasks.findByName('jacocoTestCoverageVerification').mustRunAfter 'jacocoTestReport'
}

task checkBuildReport {
    dependsOn 'check'
    dependsOn 'jacocoTestReport'
    dependsOn 'jacocoTestCoverageVerification'
    dependsOn 'autodeploy'
    tasks.findByName('jacocoTestReport').mustRunAfter 'check'
    tasks.findByName('jacocoTestCoverageVerification').mustRunAfter 'jacocoTestReport'
    tasks.findByName('autodeploy').mustRunAfter 'jacocoTestCoverageVerification'
}
